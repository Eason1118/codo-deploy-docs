---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    {{ include "label.common" . | nindent 4 }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: cloud-agent-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/part-of: cloud-agent-operator
    control-plane: controller-manager
  name: cloud-agent-operator-controller-manager
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  serviceName: cloud-agent-operator
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      {{ include "imagepullsecret.define" . | nindent 6 }}

      containers:
        - args:
            - --health-probe-bind-address=:8081
            - --leader-elect
            - -conf=/etc/config/config.yaml
          command:
            - /app/manager
          image: {{ required "The cloudAgentOperatorImage is required" .Values.cloudAgentOperatorImage }}
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 9090
              name: pprof
              protocol: TCP
            - containerPort: 6060
              name: metrics
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 1000m
              memory: 1024Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /etc/config
              name: config-volume
            - mountPath: /data/codo-agent
              name: codo-storage-volume
              subPath: cloud-agent-operator/codo-agent
            - mountPath: /data/codo-work-dir
              name: codo-storage-volume
              subPath: cloud-agent-operator/codo-work-dir
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          image: m.daocloud.io/gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      securityContext:
        runAsNonRoot: false
      serviceAccountName: cloud-agent-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - configMap:
            items:
              - key: config.yaml
                path: config.yaml
            name: cloud-agent-operator-config
          name: config-volume
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: codo-storage-volume
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        volumeMode: Filesystem