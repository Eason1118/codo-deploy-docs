apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "notice.uname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "notice.labels" . | nindent 4 }}
data:
  config.yaml: |2
    # 项目元信息
    metadata:
      name: "codo-notice"
      env: {{ required "The env is required" .Values.env }}
      gatewayPrefix: "http://{{ template "gateway.innerApi" . }}"
      gatewayToken: "{{ required "The gatewayInnerApiToken is required" .Values.gatewayInnerApiToken }}"

    # 中间件
    middleware:
      jwt:
        authKeyName: "auth_key"

    # 服务注册
    etcdRegistry:
      endpoints:
        - "127.0.0.1:2379"

    # 可观测性相关
    otel:
      trace:
        # jaeger 配置 的 endpoint
        endpoint: "{{ .Values.otel.trace.endpoint }}"
        # endpoint 是否是 https
        insecure: {{ required "The otel.trace.insecure is required" .Values.otel.trace.insecure }}
      metric:
        enableExemplar: true
      log:
        level: {{ required "The noticeLogLevel is required" .Values.noticeLogLevel }}

    # 运输层相关
    server:
      # 控制+通知接口配置
      http:
        network: "tcp"
        addr: "0.0.0.0:{{ required "The noticeListenPort is required" .Values.noticeListenPort }}"
        timeout: 10s
      # 第三方 webhook 接入
      thirdPartHook:
        network: "tcp"
        addr: "0.0.0.0:{{ required "The thirdPartHookPort is required" .Values.noticeHookListenPort }}"
        timeout: 5s
      # metrics 配置
      prometheus:
        enable: true
        network: "tcp"
        addr: "0.0.0.0:{{ required "The metricsPort is required" .Values.noticePromListenPort }}"
        path: "/metrics"
      # golang pprof 配置
      pprof:
        enable: true
        network: "tcp"
        addr: "0.0.0.0:{{ required "The pprofPort is required" .Values.noticePprofListenPort }}"

    # 通知渠道回调配置
    hook:
      larkCard:
        verificationToken: "{{ required "The noticeConfig.hook.larkCard.verificationToken is required" .Values.noticeConfig.hook.larkCard.verificationToken }}"
        encryptKey: "{{ .Values.noticeConfig.hook.larkCard.encryptKey }}"

    # 通知渠道配置
    notifyConfig:
      # email 配置
      email:
        host: {{ required "The noticeConfig.notifyConfig.email.host is required" .Values.noticeConfig.notifyConfig.email.host | quote }}
        port: {{ required "The noticeConfig.notifyConfig.email.port is required" .Values.noticeConfig.notifyConfig.email.port }}
        user: {{ required "The noticeConfig.notifyConfig.email.user is required" .Values.noticeConfig.notifyConfig.email.user | quote }}
        password: {{ required "The noticeConfig.notifyConfig.email.password is required" .Values.noticeConfig.notifyConfig.email.password | quote }}

      # 阿里通知配置
      aliyun:
        dxAccessId: {{ required "The noticeConfig.notifyConfig.aliyun.dxAccessId is required" .Values.noticeConfig.notifyConfig.aliyun.dxAccessId | quote }}
        dxAccessSecret: {{ required "The noticeConfig.notifyConfig.aliyun.dxAccessSecret is required" .Values.noticeConfig.notifyConfig.aliyun.dxAccessSecret | quote }}
        dxSignName: {{ required "The noticeConfig.notifyConfig.aliyun.dxSignName is required" .Values.noticeConfig.notifyConfig.aliyun.dxSignName | quote }}
        dxTemplate: {{ required "The noticeConfig.notifyConfig.aliyun.dxTemplate is required" .Values.noticeConfig.notifyConfig.aliyun.dxTemplate | quote }}
        dhAccessId: {{ required "The noticeConfig.notifyConfig.aliyun.dhAccessId is required" .Values.noticeConfig.notifyConfig.aliyun.dhAccessId | quote }}
        dhAccessSecret: {{ required "The noticeConfig.notifyConfig.aliyun.dhAccessSecret is required" .Values.noticeConfig.notifyConfig.aliyun.dhAccessSecret | quote }}
        dhTtsCode: {{ required "The noticeConfig.notifyConfig.aliyun.dhTtsCode is required" .Values.noticeConfig.notifyConfig.aliyun.dhTtsCode | quote }}
        dhCalledShowNumber: {{ required "The noticeConfig.notifyConfig.aliyun.dhCalledShowNumber is required" .Values.noticeConfig.notifyConfig.aliyun.dhCalledShowNumber | quote }}
        enable: {{ required "The noticeConfig.notifyConfig.aliyun.enable is required" .Values.noticeConfig.notifyConfig.aliyun.enable }}

      # 腾讯通知配置
      txyun:
        dxAccessId: {{ required "The noticeConfig.notifyConfig.txyun.dxAccessId is required" .Values.noticeConfig.notifyConfig.txyun.dxAccessId | quote }}
        dxAccessSecret: {{ required "The noticeConfig.notifyConfig.txyun.dxAccessSecret is required" .Values.noticeConfig.notifyConfig.txyun.dxAccessSecret | quote }}
        dxSignName: {{ required "The noticeConfig.notifyConfig.txyun.dxSignName is required" .Values.noticeConfig.notifyConfig.txyun.dxSignName | quote }}
        dxTemplate: {{ required "The noticeConfig.notifyConfig.txyun.dxTemplate is required" .Values.noticeConfig.notifyConfig.txyun.dxTemplate | quote }}
        dxAppId: {{ required "The noticeConfig.notifyConfig.txyun.dxAppId is required" .Values.noticeConfig.notifyConfig.txyun.dxAppId | quote }}
        dhAccessId: {{ required "The noticeConfig.notifyConfig.txyun.dhAccessId is required" .Values.noticeConfig.notifyConfig.txyun.dhAccessId | quote }}
        dhAccessSecret: {{ required "The noticeConfig.notifyConfig.txyun.dhAccessSecret is required" .Values.noticeConfig.notifyConfig.txyun.dhAccessSecret | quote }}
        dhTemplate: {{ required "The noticeConfig.notifyConfig.txyun.dhTemplate is required" .Values.noticeConfig.notifyConfig.txyun.dhTemplate | quote }}
        dhAppId: {{ required "The noticeConfig.notifyConfig.txyun.dhAppId is required" .Values.noticeConfig.notifyConfig.txyun.dhAppId | quote }}
        enable: {{ required "The noticeConfig.notifyConfig.txyun.enable is required" .Values.noticeConfig.notifyConfig.txyun.enable }}

      # 飞书配置
      fsapp:
        appId: {{ required "The noticeConfig.notifyConfig.fsapp.appId is required" .Values.noticeConfig.notifyConfig.fsapp.appId | quote }}
        appSecret: {{ required "The noticeConfig.notifyConfig.fsapp.appSecret is required" .Values.noticeConfig.notifyConfig.fsapp.appSecret | quote }}

      # 钉钉通知配置
      ddapp:
        appId: {{ required "The noticeConfig.notifyConfig.ddapp.appId is required" .Values.noticeConfig.notifyConfig.ddapp.appId | quote }}
        appSecret: {{ required "The noticeConfig.notifyConfig.ddapp.appSecret is required" .Values.noticeConfig.notifyConfig.ddapp.appSecret | quote }}
        agentId: {{ required "The noticeConfig.notifyConfig.ddapp.agentId is required" .Values.noticeConfig.notifyConfig.ddapp.agentId | quote }}

      # 微信通知配置
      wxapp:
        agentId: {{ required "The noticeConfig.notifyConfig.wxapp.agentId is required" .Values.noticeConfig.notifyConfig.wxapp.agentId | quote }}
        agentSecret: {{ required "The noticeConfig.notifyConfig.wxapp.agentSecret is required" .Values.noticeConfig.notifyConfig.wxapp.agentSecret | quote }}
        cropId: {{ required "The noticeConfig.notifyConfig.wxapp.cropId is required" .Values.noticeConfig.notifyConfig.wxapp.cropId | quote }}

    # 数据库和缓存相关
    data:
      database:
        link: "{{ required "The mysql.user is required" .Values.mysql.user }}:{{ required "The mysql.passwd is required" .Values.mysql.passwd }}@tcp({{ required "The mysql.host is required" .Values.mysql.host }}:{{ required "The mysql.port is required" .Values.mysql.port }})/codo-notice?loc=Local&charset=utf8mb4&parseTime=True"
        debug: {{ required "The noticeDBDebug is required" .Values.noticeDBDebug }}
        prefix: codo_
      redis:
        addr: {{ required "The redis.host is required" .Values.redis.host }}:{{ required "The redis.port is required" .Values.redis.port }}
        readTimeout: 0.2s
        writeTimeout: 0.2s
        db: 2
        password: "{{ required "The redis.passwd is required" .Values.redis.passwd }}"

