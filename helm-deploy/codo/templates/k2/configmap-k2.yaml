apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "k2.uname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "k2.labels" . | nindent 4 }}
data:
  settings.py: |+
    #!/usr/bin/env python
    # -*- coding: utf-8 -*-
    import os

    from websdk2.consts import const

    ROOT_DIR = os.path.dirname(__file__)
    debug = True
    xsrf_cookies = False
    expire_seconds = 365 * 24 * 60 * 60
    cookie_secret = os.getenv('DEFAULT_COOKIE_SECRET', '{{ required "The cookieSecretPy is required" .Values.cookieSecretPy }}')

    DEFAULT_DB_DBHOST = os.getenv('DEFAULT_DB_DBHOST', '{{ required "The mysql.host is required" .Values.mysql.host }}')
    DEFAULT_DB_DBPORT = os.getenv('DEFAULT_DB_DBPORT', {{ required "The mysql.port is required" .Values.mysql.port }})
    DEFAULT_DB_DBUSER = os.getenv('DEFAULT_DB_DBUSER', '{{ required "The mysql.user is required" .Values.mysql.user }}')
    DEFAULT_DB_DBPWD = os.getenv('DEFAULT_DB_DBPWD', '{{ required "The mysql.passwd is required" .Values.mysql.passwd }}')
    DEFAULT_DB_DBNAME = os.getenv('DEFAULT_DB_DBNAME', '{{ required "The k2DB is required" .Values.k2DB }}')

    READONLY_DB_DBHOST = os.getenv('READONLY_DB_DBHOST', '{{ required "The mysql.host is required" .Values.mysql.host }}')
    READONLY_DB_DBPORT = os.getenv('READONLY_DB_DBPORT', {{ required "The mysql.port is required" .Values.mysql.port }})
    READONLY_DB_DBUSER = os.getenv('READONLY_DB_DBUSER', '{{ required "The mysql.user is required" .Values.mysql.user }}')
    READONLY_DB_DBPWD = os.getenv('READONLY_DB_DBPWD', '{{ required "The mysql.passwd is required" .Values.mysql.passwd }}')
    READONLY_DB_DBNAME = os.getenv('READONLY_DB_DBNAME', '{{ required "The k2DB is required" .Values.k2DB }}')

    # 和其他系统交互使用
    api_gw = "http://{{ template "gateway.innerApi" . }}"
    settings_auth_key = "{{ required "The gatewayInnerApiToken is required" .Values.gatewayInnerApiToken }}"
    no_auth_sign_key = os.getenv("CODO_NO_AUTH_SIGN_KEY", '{{ required "The k2NoAuthSignKey is required" .Values.k2NoAuthSignKey }}')

    try:
      from local_settings import *
    except ImportError:
      print('local_settings.py  No Found.')

    settings = dict(
      debug=debug,
      api_gw=api_gw,
      settings_auth_key=settings_auth_key,
      xsrf_cookies=xsrf_cookies,
      cookie_secret=cookie_secret,
      expire_seconds=expire_seconds,
      no_auth_sign_key=no_auth_sign_key,
      app_name='codo-k2',
      databases={
        const.DEFAULT_DB_KEY: {
          const.DBHOST_KEY: DEFAULT_DB_DBHOST,
          const.DBPORT_KEY: DEFAULT_DB_DBPORT,
          const.DBUSER_KEY: DEFAULT_DB_DBUSER,
          const.DBPWD_KEY: DEFAULT_DB_DBPWD,
          const.DBNAME_KEY: DEFAULT_DB_DBNAME,
        },
        const.READONLY_DB_KEY: {
          const.DBHOST_KEY: READONLY_DB_DBHOST,
          const.DBPORT_KEY: READONLY_DB_DBPORT,
          const.DBUSER_KEY: READONLY_DB_DBUSER,
          const.DBPWD_KEY: READONLY_DB_DBPWD,
          const.DBNAME_KEY: READONLY_DB_DBNAME,
        }
      },
    )